/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n)
    { 
        int l=0;
        ListNode *t=head;
//      find size of linked list
     while(t)
     {   l++;
         t=t->next;  
     }       
     // find  the nth from starting
        l=l-n;
    //case 1
     if(l==0)
     {
         head=head->next;
         return head;
     }
//         case 2
      t=head;
     for(int i=0;i!=l-1;i++)
     {
         t=t->next;
     }
      t->next=(t->next)->next;
     return head;
     
     
    }
};
